{"version":3,"sources":["components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","Redux/profileSelectors.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","media/user.png","hoc/WithAuthRedirect.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["ProfileStatus","profileStatus","updateProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","id","onDoubleClick","onChange","e","value","target","onBlur","type","autoFocus","ProfileInfo","profile","Preloader","className","classes","descriptionBloc","src","photos","large","undefinedAva","alt","avatar","Post","message","likes","posts","item","ava","small","AddPostForm","onSubmit","props","handleSubmit","name","component","Textarea","validate","composeValidators","required","maxLength","placeholder","MyPosts","React","memo","addPost","postsList","reverse","map","postsBloc","values","postText","getProfileSelector","state","profilePage","getProfileStatusSelector","getPostsSelector","MyPostsContainer","connect","Profile","ProfileContainer","this","match","currentUserId","history","getProfile","getProfileStatus","userId","params","push","Component","compose","getUserIdSelector","isAuth","getIsAuthSelector","authorizedUserId","getAuthorizedUserIdSelector","withRouter","withAuthRedirect","mapStateToProps","RedirectComponent","to","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","unsupportedIterableToArray","TypeError","module","exports"],"mappings":"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","file":"static/js/3.5ed5373d.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nconst ProfileStatus = ({profileStatus, updateProfileStatus}) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(profileStatus);\n\n    useEffect(() => {\n        setStatus(profileStatus)\n    }, [profileStatus])\n\n    const editModeOn = () => {\n        setEditMode(true)\n    }\n\n    const editModeOff = () => {\n        setEditMode(false)\n\n        updateProfileStatus(status);\n    }\n\n    const changeProfileStatus = (e) => {\n        let value = e.target.value;\n\n        setStatus(value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <span id={'profileStatus'}\n                    onDoubleClick={editModeOn}\n                >\n                    {profileStatus || '----'}\n                </span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input\n                    onChange={changeProfileStatus}\n                    onBlur={editModeOff}\n                    value={status}\n                    type={'text'}\n                    autoFocus={true}\n                />\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatus;\n","import React from 'react';\nimport classes from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport undefinedAva from '../../../media/user.png'\nimport ProfileStatus from \"./ProfileStatus\";\n\nconst ProfileInfo = ({profile, updateProfileStatus, profileStatus}) => {\n    if (!profile) {\n        return (\n            <Preloader/>\n        )\n    }\n\n    const getUserAvatar = () => {\n        if (profile.photos.large) {\n            return profile.photos.large;\n        } else {\n            return undefinedAva;\n        }\n    };\n\n    return (\n        <div>\n            <div className={classes.descriptionBloc}>\n                <img src={getUserAvatar()} alt=\"avatar\" className={classes.avatar}/>\n                <ProfileStatus profileStatus={profileStatus} updateProfileStatus={updateProfileStatus}/>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport classes from './Post.module.css';\nimport undefinedAva from \"../../../../media/user.png\";\n\nconst Post = ({profile, message, likes}) => {\n    const getUserAvatar = () => {\n        if (profile && profile.photos.small) {\n            return profile.photos.small;\n        } else {\n            return undefinedAva;\n        }\n    };\n\n    return (\n        <div className={classes.posts}>\n            <div className={classes.item}>\n                <img className={classes.ava} src={getUserAvatar()} alt={'ava'}/>\n                {message}\n            </div>\n            <div>\n                <span>\n                    like {likes}\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from \"./Post/Post\";\nimport classes from './MyPosts.module.css'\nimport {Field, Form} from \"react-final-form\";\nimport {composeValidators, maxLength, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst AddPostForm = ({onSubmit}) => {\n    return (\n        <Form onSubmit={onSubmit}>\n            {(props) => {\n                return (\n                    <form onSubmit={props.handleSubmit} name={'AddPostForm'}>\n                        <div>\n                            <Field\n                                component={Textarea}\n                                name={'postText'}\n                                validate={composeValidators(required, maxLength(300))}\n                                placeholder={'post msg'}\n                            />\n                        </div>\n                        <div>\n                            <button>\n                                Add post\n                            </button>\n                        </div>\n                    </form>\n                )\n            }}\n        </Form>\n    )\n}\n\nconst MyPosts = React.memo(({posts, profile, addPost}) => {\n    let postsList = [...posts]\n        .reverse()\n        .map(item =>\n            <Post\n                profile={profile}\n                message={item.message}\n                likes={item.likes}\n                id={item.id}\n                key={item.id}\n            />\n        )\n\n    const addNewPost = (values) => {\n        addPost(values.postText);\n    }\n\n    return (\n        <div className={classes.postsBloc}>\n            <h3>my posts</h3>\n            <AddPostForm onSubmit={addNewPost}/>\n            <div className={classes.posts}>\n                {postsList}\n            </div>\n        </div>\n    );\n});\n\nexport default MyPosts;\n","export const getProfileSelector = (state) => {\n    return state.profilePage.profile;\n}\n\nexport const getProfileStatusSelector = (state) => {\n    return state.profilePage.profileStatus;\n}\n\nexport const getPostsSelector = (state) => {\n    return state.profilePage.posts;\n}","import {addPost} from \"../../../Redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {getPostsSelector, getProfileSelector} from \"../../../Redux/profileSelectors\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: getPostsSelector(state),\n        profile: getProfileSelector(state)\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, {\n    addPost,\n})(MyPosts);\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = ({profile, profileStatus, updateProfileStatus}) => {\n    return (\n        <div>\n            <ProfileInfo\n                profile={profile}\n                profileStatus={profileStatus}\n                updateProfileStatus={updateProfileStatus}\n            />\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getProfile, getProfileStatus, updateProfileStatus} from \"../../Redux/profileReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\nimport {getAuthorizedUserIdSelector, getIsAuthSelector, getUserIdSelector} from \"../../Redux/authSelectors\";\nimport {getProfileSelector, getProfileStatusSelector} from \"../../Redux/profileSelectors\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let {match, currentUserId, history, getProfile, getProfileStatus} = this.props;\n        let userId = match.params.userId;\n\n        if (!userId) {\n            userId = currentUserId;\n\n            if (!userId) {\n                history.push('/profile');\n            }\n        }\n\n        getProfile(userId);\n        getProfileStatus(userId);\n    }\n\n    render() {\n        let {profile, updateProfileStatus, profileStatus} = this.props;\n\n        return (\n            <Profile\n                profile={profile}\n                updateProfileStatus={updateProfileStatus}\n                profileStatus={profileStatus}\n            />\n        );\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        profile: getProfileSelector(state),\n        currentUserId: getUserIdSelector(state),\n        profileStatus: getProfileStatusSelector(state),\n        isAuth: getIsAuthSelector(state),\n        authorizedUserId: getAuthorizedUserIdSelector(state)\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {\n        getProfile,\n        getProfileStatus,\n        updateProfileStatus\n    }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);\n","export default __webpack_public_path__ + \"static/media/user.8d49e377.png\";","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {getIsAuthSelector} from \"../Redux/authSelectors\";\n\nlet mapStateToProps = (state) => {\n    return {\n        isAuth: getIsAuthSelector(state),\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) {\n                return <Redirect to={'/login'}/>\n            }\n\n            return <Component {...this.props} />\n        }\n    }\n\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n\n    return ConnectedRedirectComponent;\n}","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pic\":\"ProfileInfo_pic__1mRKR\",\"descriptionBloc\":\"ProfileInfo_descriptionBloc__3Wn3N\",\"avatar\":\"ProfileInfo_avatar__3xuFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"posts\":\"Post_posts__144VX\",\"ava\":\"Post_ava__2EGbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBloc\":\"MyPosts_postsBloc__Naxu4\",\"posts\":\"MyPosts_posts__3tZ1c\"};"],"sourceRoot":""}