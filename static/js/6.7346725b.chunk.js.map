{"version":3,"sources":["components/Users/User/User.module.css","components/common/Paginator/Paginator.module.css","components/Users/UsersSeartchForm.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","Redux/selectors/usersSelectors.ts","components/common/Paginator/Paginator.tsx","components/Users/UsersContainer.tsx","media/user.png"],"names":["module","exports","FieldsEnum","User","userId","unfollow","follow","followingInProgress","user","to","id","src","photos","small","undefinedAva","alt","className","classes","userPhoto","followed","onClick","disabled","some","followButton","name","status","Users","users","map","getPageSizeSelectorSelector","state","usersPage","pageSize","getTotalUsersCountSelector","totalUsersCount","getCurrentPageSelector","currentPage","getUsersIsFetchingSelector","isFetching","getFollowingInProgressSelector","getUsersFilterSelector","filter","getUsersSelector","createSelector","u","Paginator","totalItemsCount","changePage","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPositionPageNumber","rightPortionPageNumber","paginator","page","cn","selectedPage","pageNumber","UsersSearchForm","React","memo","onFilterChanged","initialValuesOfForm","term","friend","initialValues","onSubmit","values","setSubmitting","JSON","parse","isSubmitting","type","component","as","value","UsersContainer","props","getUsersList","this","Preloader","Component","compose","connect"],"mappings":"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","file":"static/js/6.7346725b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__2MGMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","import {ErrorMessage, Field, Form, Formik} from \"formik\"\nimport React from \"react\"\nimport {FilterType} from \"../../Redux/reducers/usersReducer\"\nimport validator from 'validator'\n\nenum FieldsEnum {\n    term = 'term',\n    friend = 'friend'\n}\n\ntype FormType = {\n    term: string,\n    friend: string\n}\n\ntype Props = {\n    onFilterChanged: (filter: FilterType) => void\n}\n\nconst UsersSearchForm: React.FC<Props> = React.memo(({onFilterChanged}) => {\n    const validate = (values: FilterType) => {\n        const errors: any = {}\n\n        if (!values.term) {\n            errors.term = 'Required'\n        } else if (validator.isEmail(values.term)) {\n            errors.term = 'Email is not supported'\n        }\n\n        return errors\n    }\n\n    const SubmitForm = (values: FormType, {setSubmitting}: { setSubmitting: (isSubmitting: boolean) => void }) => {\n\n        const filter: FilterType = {\n            term: values.term,\n            friend: JSON.parse(values.friend)\n        }\n\n        onFilterChanged(filter)\n\n        setSubmitting(false)\n    }\n\n    const initialValuesOfForm = {\n        [FieldsEnum.term]: '',\n        [FieldsEnum.friend]: 'null'\n    }\n\n    return (\n        <div>\n            <Formik\n                initialValues={initialValuesOfForm}\n                onSubmit={SubmitForm}\n                //validate={validate}\n            >\n                {\n                    ({isSubmitting}) => (\n                        <Form>\n                            <Field type=\"text\" name={FieldsEnum.term}/>\n                            <ErrorMessage name={FieldsEnum.term} component=\"div\"/>\n                            <Field name={FieldsEnum.friend} as=\"select\">\n                                <option value={'null'}>All</option>\n                                <option value={'true'}>Only followed</option>\n                                <option value={'false'}>Only unfollowed</option>\n                            </Field>\n\n                            <div>\n                                <button type=\"submit\" disabled={isSubmitting}>\n                                    Submit\n                                </button>\n                            </div>\n                        </Form>\n                    )\n                }\n            </Formik>\n        </div>\n    )\n})\n\nexport default UsersSearchForm","import React from 'react';\nimport classes from \"./User.module.css\";\nimport undefinedAva from \"../../../media/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport {UserType} from \"../../../types/types\";\n\ntype Props = {\n    unfollow: (userId: number) => void\n    follow: (userId: number) => void\n    followingInProgress: Array<number>\n    user: UserType\n}\n\nconst User: React.FC<Props> = ({unfollow, follow, followingInProgress, user}) => {\n    const unfollowButton = (userId: number) => {\n        return (\n            <button\n                onClick={() => {\n                    unfollow(userId)\n                }}\n                disabled={followingInProgress.some(id => id === userId)}\n            >\n                Unfollow\n            </button>\n        )\n    }\n\n    const followButton = (userId: number) => {\n        return (\n            <button\n                onClick={() => {\n                    follow(userId)\n                }}\n                disabled={followingInProgress.some(id => id === userId)}\n            >\n                Follow\n            </button>\n        )\n    }\n\n    return (\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img\n                            src={!user.photos.small ? undefinedAva : user.photos.small}\n                            alt='userAvatar'\n                            className={classes.userPhoto}\n                        />\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed ? unfollowButton(user.id) : followButton(user.id)}\n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>{user.name}</div>\n                    <div>{user.status}</div>\n                </span>\n                <span>\n                    <div>user.location.country</div>\n                    <div>user.location.city</div>\n                </span>\n            </span>\n        </div>\n    )\n}\n\nexport default User;","import React from 'react'\nimport User from \"./User/User\"\nimport {UserType} from \"../../types/types\"\n\ntype Props = {\n    unfollow: (userId: number) => void\n    follow: (userId: number) => void\n    followingInProgress: Array<number>\n    users: Array<UserType>\n}\n\nconst Users: React.FC<Props> = ({unfollow, follow, followingInProgress, users}) => {\n    return (\n        <div>\n            {users.map(user =>\n                <User\n                    key={user.id}\n                    user={user}\n                    follow={follow}\n                    unfollow={unfollow}\n                    followingInProgress={followingInProgress}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default Users;","import {createSelector} from \"reselect\";\nimport {AppStateType} from \"../redux-store\";\n\nconst getUsers = (state: AppStateType) => {\n    return state.usersPage.users;\n};\n\nexport const getPageSizeSelectorSelector = (state: AppStateType) => {\n    return state.usersPage.pageSize;\n};\n\nexport const getTotalUsersCountSelector = (state: AppStateType) => {\n    return state.usersPage.totalUsersCount;\n};\n\nexport const getCurrentPageSelector = (state: AppStateType) => {\n    return state.usersPage.currentPage;\n};\n\nexport const getUsersIsFetchingSelector = (state: AppStateType) => {\n    return state.usersPage.isFetching;\n};\n\nexport const getFollowingInProgressSelector = (state: AppStateType) => {\n    return state.usersPage.followingInProgress;\n};\n\nexport const getUsersFilterSelector = (state: AppStateType) => {\n    return state.usersPage.filter;\n};\n\nexport const getUsersSelector = createSelector(getUsers, (users) => {\n    return users.filter(u => true);\n});\n\n","import React, {useState} from 'react';\nimport classes from \"./Paginator.module.css\";\nimport cn from 'classnames';\n\ntype Props = {\n    totalItemsCount: number\n    pageSize: number\n    currentPage: number\n    changePage: (page: number) => void\n    portionSize?: number\n}\n\nconst Paginator: React.FC<Props> = (\n    {\n        totalItemsCount,\n        pageSize,\n        currentPage,\n        changePage,\n        portionSize = 5\n    }\n) => {\n    const pageCount = Math.ceil(totalItemsCount / pageSize);\n    const pages = [];\n\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i)\n    }\n\n    const portionCount = Math.ceil(pageCount / portionSize);\n    const [portionNumber, setPortionNumber] = useState(1);\n    const leftPositionPageNumber = (portionNumber - 1) * portionSize + 1;\n    const rightPortionPageNumber = portionNumber * portionSize;\n\n    const prevPages = () => {\n        setPortionNumber(portionNumber - 1);\n    }\n\n    const nextPages = () => {\n        setPortionNumber(portionNumber + 1);\n    }\n\n    return (\n        <div className={classes.paginator}>\n            {portionNumber > 1 &&\n            <button onClick={prevPages}>\n                Prev\n            </button>}\n            {pages\n                .filter(page => page >= leftPositionPageNumber && page <= rightPortionPageNumber)\n                .map(page => {\n                    return (\n                        <span\n                            className={cn({[classes.selectedPage]: currentPage === page}, classes.pageNumber)}\n                            onClick={() => changePage(page)}\n                            key={page}\n                        >\n                            {page}\n                    </span>\n                    )\n                })}\n            {portionCount > portionNumber &&\n            <button onClick={nextPages}>\n                Prev\n            </button>}\n        </div>\n    )\n}\n\nexport default Paginator;","import {connect} from \"react-redux\"\nimport {FilterType, follow, getUsersList, unfollow} from \"../../Redux/reducers/usersReducer\"\nimport Users from \"./Users\"\nimport React from 'react'\nimport Preloader from \"../common/Preloader/Preloader\"\nimport {compose} from \"redux\"\nimport {\n    getCurrentPageSelector,\n    getFollowingInProgressSelector,\n    getPageSizeSelectorSelector,\n    getTotalUsersCountSelector,\n    getUsersFilterSelector,\n    getUsersIsFetchingSelector,\n    getUsersSelector\n} from \"../../Redux/selectors/usersSelectors\"\nimport Paginator from \"../common/Paginator/Paginator\"\nimport {UserType} from \"../../types/types\"\nimport {AppStateType} from \"../../Redux/redux-store\"\nimport UsersSearchForm from \"./UsersSeartchForm\"\n\ntype StateToProps = {\n    pageSize: number\n    currentPage: number\n    isFetching: boolean\n    totalUsersCount: number\n    users: Array<UserType>\n    followingInProgress: Array<number>\n    filter: FilterType\n}\n\ntype DispatchToProps = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    getUsersList: (pageSize: number, currentPage: number, filter: FilterType) => void\n}\n\ntype Props = DispatchToProps & StateToProps\n\nclass UsersContainer extends React.Component<Props> {\n    componentDidMount() {\n        const {getUsersList, pageSize, currentPage, filter} = this.props;\n\n        getUsersList(pageSize, currentPage, filter);\n    }\n\n    changePage = (pageNumber: number) => {\n        const {getUsersList, pageSize, filter} = this.props;\n\n        getUsersList(pageSize, pageNumber, filter);\n    }\n\n    onFilterChanged = (filter: FilterType) => {\n        const {pageSize, getUsersList} = this.props;\n\n        getUsersList(pageSize, 1, filter); //current page 1, если обновляем фильтр\n    }\n\n    render() {\n        const {\n            isFetching,\n            totalUsersCount,\n            pageSize,\n            currentPage,\n            users, follow,\n            unfollow,\n            followingInProgress\n        } = this.props;\n\n        return (\n            <>\n                <UsersSearchForm onFilterChanged={this.onFilterChanged}/>\n                <Paginator\n                    currentPage={currentPage}\n                    changePage={this.changePage}\n                    totalItemsCount={totalUsersCount}\n                    pageSize={pageSize}\n                />\n                {isFetching ? <Preloader/> :\n                    <Users\n                        users={users}\n                        follow={follow}\n                        unfollow={unfollow}\n                        followingInProgress={followingInProgress}\n                    />\n                }\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): StateToProps => {\n    return {\n        users: getUsersSelector(state),\n        pageSize: getPageSizeSelectorSelector(state),\n        totalUsersCount: getTotalUsersCountSelector(state),\n        currentPage: getCurrentPageSelector(state),\n        isFetching: getUsersIsFetchingSelector(state),\n        followingInProgress: getFollowingInProgressSelector(state),\n        filter: getUsersFilterSelector(state)\n    }\n}\n\nexport default compose<React.ComponentType>(\n    connect<StateToProps, DispatchToProps, {}, AppStateType>(mapStateToProps, {\n        follow,\n        unfollow,\n        getUsersList\n    }),\n)(UsersContainer)","export default __webpack_public_path__ + \"static/media/user.8d49e377.png\";"],"sourceRoot":""}