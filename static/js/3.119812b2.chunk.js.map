{"version":3,"sources":["components/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.jsx","components/Profile/ProfileInfo/Contact/Contact.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","Redux/selectors/profileSelectors.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","media/user.png","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","hoc/WithAuthRedirect.jsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileData/ProfileDataForm.module.css","components/Profile/ProfileInfo/Contact/Contact.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["ProfileStatus","profileStatus","updateProfileStatus","useState","editMode","setEditMode","status","setStatus","useEffect","id","onDoubleClick","onChange","e","value","target","onBlur","type","autoFocus","ProfileDataForm","onSubmit","profile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","props","handleSubmit","name","className","classes","gridFields","placeholder","component","validate","required","initialValue","checkbox","Object","keys","map","key","Contact","contactTitle","contactValue","contact","href","rel","ProfileData","editModeOn","isOwner","onClick","ProfileInfo","uploadPhoto","saveProfileData","descriptionBloc","src","photos","large","undefinedAva","alt","avatar","files","formData","then","Post","message","likes","posts","item","ava","small","AddPostForm","Textarea","composeValidators","maxLength","MyPosts","React","memo","addPost","postsList","reverse","postsBloc","values","postText","getProfileSelector","state","profilePage","getProfileStatusSelector","getPostsSelector","MyPostsContainer","connect","Profile","Preloader","ProfileContainer","refreshProfile","match","currentUserId","history","getProfile","getProfileStatus","userId","params","push","this","prevProps","prevState","snapshot","Component","compose","getUserIdSelector","isAuth","getIsAuthSelector","withRouter","withAuthRedirect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","length","err","unsupportedIterableToArray","TypeError","mapStateToProps","RedirectComponent","to","module","exports"],"mappings":"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","file":"static/js/3.119812b2.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\n\nconst ProfileStatus = ({profileStatus, updateProfileStatus}) => {\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(profileStatus);\n\n    useEffect(() => {\n        setStatus(profileStatus)\n    }, [profileStatus])\n\n    const editModeOn = () => {\n        setEditMode(true)\n    }\n\n    const editModeOff = () => {\n        setEditMode(false)\n\n        updateProfileStatus(status);\n    }\n\n    const changeProfileStatus = (e) => {\n        const value = e.target.value;\n\n        setStatus(value);\n    }\n\n    return (\n        <div>\n            {!editMode &&\n            <div>\n                <b>\n                    <span id={'profileStatus'} onDoubleClick={editModeOn}>\n                        {profileStatus || '----'}\n                    </span>\n                </b>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input\n                    onChange={changeProfileStatus}\n                    onBlur={editModeOff}\n                    value={status}\n                    type={'text'}\n                    autoFocus={true}\n                />\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileStatus;\n","import {Field, Form} from \"react-final-form\";\nimport {required} from \"../../../../utils/validators/validators\";\nimport React from \"react\";\nimport classes from './ProfileDataForm.module.css'\n\nconst ProfileDataForm = ({onSubmit, profile}) => {\n    const {fullName, lookingForAJob, lookingForAJobDescription, aboutMe, contacts} = profile;\n\n    return (\n        <Form onSubmit={onSubmit}>\n            {(props) => {\n                return (\n                    <form onSubmit={props.handleSubmit} name={'ProfileDataForm'} className={classes.gridFields}>\n                        <div>\n                            <span>Full name:</span>\n                            <Field\n                                name={'fullName'}\n                                placeholder={'Full name'}\n                                type={'text'}\n                                component={'input'}\n                                validate={required}\n                                initialValue={fullName}\n                            />\n                        </div>\n                        <div className={classes.checkbox}>\n                            <span>Looking for a job?</span>\n                            <Field\n                                name={'lookingForAJob'}\n                                placeholder={'Looking for a job?'}\n                                type={'checkbox'}\n                                component={'input'}\n                                initialValue={lookingForAJob}\n                            />\n                        </div>\n                        <div>\n                            <span>My skills</span>\n                            <Field\n                                name={'lookingForAJobDescription'}\n                                placeholder={'My skills'}\n                                component={'textarea'}\n                                validate={required}\n                                initialValue={lookingForAJobDescription}\n                            />\n                        </div>\n                        <div>\n                            <span>About me</span>\n                            <Field\n                                name={'aboutMe'}\n                                placeholder={'About me'}\n                                component={'textarea'}\n                                validate={required}\n                                initialValue={aboutMe}\n                            />\n                        </div>\n                        <div>\n                            <b>Contacts</b>:\n                            {Object.keys(contacts).map(key => {\n                                return (\n                                    <div key={key}>\n                                        <span>{key}</span>\n                                        <Field\n                                            name={'contacts.' + key}\n                                            placeholder={key}\n                                            type={'text'}\n                                            component={'input'}\n                                            initialValue={contacts[key]}\n                                        />\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <div>\n                            <button>Сохранить</button>\n                        </div>\n                    </form>\n                )\n            }}\n        </Form>\n    )\n}\n\nexport default ProfileDataForm;","import classes from \"./Contact.module.css\";\nimport React from \"react\";\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return (\n        <div className={classes.contact}>\n            <b>{contactTitle}</b>: <a href={contactValue} target={'_blank'} rel={'noreferrer'}>{contactValue}</a>\n        </div>\n    )\n}\n\nexport default Contact;","import React from 'react';\nimport Contact from \"../Contact/Contact\";\n\nconst ProfileData = ({profile, editModeOn, isOwner}) => {\n    const {fullName, lookingForAJob, lookingForAJobDescription, aboutMe, contacts} = profile;\n\n    return (\n        <div>\n            <div>\n                <b>Full name</b>: {fullName}\n            </div>\n            <div>\n                <b>Looking for a job</b>: {lookingForAJob ? 'yes' : 'no'}\n            </div>\n            {lookingForAJob &&\n            <div>\n                <b>My skills</b>: {lookingForAJobDescription}\n            </div>\n            }\n            <div>\n                <b>About me</b>: {aboutMe}\n            </div>\n            <div>\n                <b>Contacts</b>:\n                {Object.keys(contacts).map(key => {\n                    return <Contact key={key} contactTitle={key} contactValue={contacts[key]}/>\n                })}\n            </div>\n            {isOwner &&\n            <div>\n                <button onClick={editModeOn}>Edit user's data</button>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default ProfileData;\n","import React, {useState} from 'react';\nimport classes from './ProfileInfo.module.css';\nimport undefinedAva from '../../../media/user.png'\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\nimport ProfileDataForm from \"./ProfileData/ProfileDataForm\";\nimport ProfileData from \"./ProfileData/ProfileData\";\n\nconst ProfileInfo = ({profile, updateProfileStatus, profileStatus, isOwner, uploadPhoto, saveProfileData}) => {\n    const [editMode, setEditMode] = useState(false);\n\n    const onPhotoSelected = (e) => {\n        const files = e.target.files;\n\n        if (files) {\n            uploadPhoto(files[0]);\n        }\n    }\n\n    const editModeOn = () => {\n        setEditMode(true);\n    }\n\n    const onSubmit = (formData) => {\n        saveProfileData(formData)\n            .then(() => {\n                setEditMode(false);\n            })\n    }\n\n    return (\n        <div>\n            <div className={classes.descriptionBloc}>\n                <img src={profile.photos.large || undefinedAva} alt=\"avatar\" className={classes.avatar}/>\n\n                {isOwner && <input type={'file'} onChange={onPhotoSelected}/>}\n\n                {isOwner && editMode\n                    ? <ProfileDataForm onSubmit={onSubmit} profile={profile}/>\n                    : <ProfileData\n                        editModeOn={editModeOn}\n                        profile={profile}\n                        isOwner={isOwner}\n                    />\n                }\n\n                <ProfileStatus profileStatus={profileStatus} updateProfileStatus={updateProfileStatus}/>\n            </div>\n        </div>\n    );\n}\n\nexport default ProfileInfo;\n","import React from 'react';\nimport classes from './Post.module.css';\nimport undefinedAva from \"../../../../media/user.png\";\n\nconst Post = ({profile, message, likes}) => {\n    const getUserAvatar = () => {\n        if (profile && profile.photos.small) {\n            return profile.photos.small;\n        } else {\n            return undefinedAva;\n        }\n    };\n\n    return (\n        <div className={classes.posts}>\n            <div className={classes.item}>\n                <img className={classes.ava} src={getUserAvatar()} alt={'ava'}/>\n                {message}\n            </div>\n            <div>\n                <span>\n                    like {likes}\n                </span>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;\n","import React from 'react';\nimport Post from \"./Post/Post\";\nimport classes from './MyPosts.module.css'\nimport {Field, Form} from \"react-final-form\";\nimport {composeValidators, maxLength, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst AddPostForm = ({onSubmit}) => {\n    return (\n        <Form onSubmit={onSubmit}>\n            {(props) => {\n                return (\n                    <form onSubmit={props.handleSubmit} name={'AddPostForm'}>\n                        <div>\n                            <Field\n                                component={Textarea}\n                                name={'postText'}\n                                validate={composeValidators(required, maxLength(300))}\n                                placeholder={'post msg'}\n                            />\n                        </div>\n                        <div>\n                            <button>\n                                Add post\n                            </button>\n                        </div>\n                    </form>\n                )\n            }}\n        </Form>\n    )\n}\n\nconst MyPosts = React.memo(({posts, profile, addPost}) => {\n    const postsList = [...posts]\n        .reverse()\n        .map(item =>\n            <Post\n                profile={profile}\n                message={item.message}\n                likes={item.likes}\n                id={item.id}\n                key={item.id}\n            />\n        )\n\n    const addNewPost = (values) => {\n        addPost(values.postText);\n    }\n\n    return (\n        <div className={classes.postsBloc}>\n            <h3>my posts</h3>\n            <AddPostForm onSubmit={addNewPost}/>\n            <div className={classes.posts}>\n                {postsList}\n            </div>\n        </div>\n    );\n});\n\nexport default MyPosts;\n","export const getProfileSelector = (state) => {\n    return state.profilePage.profile;\n}\n\nexport const getProfileStatusSelector = (state) => {\n    return state.profilePage.profileStatus;\n}\n\nexport const getPostsSelector = (state) => {\n    return state.profilePage.posts;\n}","import {addPost} from \"../../../Redux/reducers/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\nimport {getPostsSelector, getProfileSelector} from \"../../../Redux/selectors/profileSelectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: getPostsSelector(state),\n        profile: getProfileSelector(state)\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, {\n    addPost,\n})(MyPosts);\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport Preloader from \"../common/Preloader/Preloader\";\n\nconst Profile = (props) => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div>\n            <ProfileInfo {...props}/>\n            <MyPostsContainer/>\n        </div>\n    );\n}\n\nexport default Profile;\n","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {\n    getProfile,\n    getProfileStatus,\n    saveProfileData,\n    updateProfileStatus,\n    uploadPhoto\n} from \"../../Redux/reducers/profileReducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {compose} from \"redux\";\nimport {getIsAuthSelector, getUserIdSelector} from \"../../Redux/selectors/authSelectors\";\nimport {getProfileSelector, getProfileStatusSelector} from \"../../Redux/selectors/profileSelectors\";\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {match} = this.props;\n\n        if (match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile();\n        }\n    }\n\n    refreshProfile = () => {\n        const {match, currentUserId, history, getProfile, getProfileStatus} = this.props;\n\n        let userId = match.params.userId;\n\n        if (!userId) {\n            userId = currentUserId;\n\n            if (!userId) {\n                history.push('/profile');\n            }\n        }\n\n        getProfile(userId);\n        getProfileStatus(userId);\n    }\n\n    render() {\n        const {profile, updateProfileStatus, profileStatus, match, uploadPhoto, saveProfileData} = this.props;\n\n        return (\n            <Profile\n                isOwner={!match.params.userId}\n                profile={profile}\n                updateProfileStatus={updateProfileStatus}\n                profileStatus={profileStatus}\n                uploadPhoto={uploadPhoto}\n                saveProfileData={saveProfileData}\n            />\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: getProfileSelector(state),\n        currentUserId: getUserIdSelector(state),\n        profileStatus: getProfileStatusSelector(state),\n        isAuth: getIsAuthSelector(state),\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, {\n        getProfile,\n        getProfileStatus,\n        updateProfileStatus,\n        uploadPhoto,\n        saveProfileData\n    }),\n    withRouter,\n    withAuthRedirect\n)(ProfileContainer);\n","export default __webpack_public_path__ + \"static/media/user.8d49e377.png\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {getIsAuthSelector} from \"../Redux/selectors/authSelectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: getIsAuthSelector(state),\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) {\n                return <Redirect to={'/login'}/>\n            }\n\n            return <Component {...this.props} />\n        }\n    }\n\n    const ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n\n    return ConnectedRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pic\":\"ProfileInfo_pic__1mRKR\",\"descriptionBloc\":\"ProfileInfo_descriptionBloc__3Wn3N\",\"avatar\":\"ProfileInfo_avatar__3xuFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridFields\":\"ProfileDataForm_gridFields__1mXzU\",\"checkbox\":\"ProfileDataForm_checkbox__2pU65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__-jpbO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\",\"posts\":\"Post_posts__144VX\",\"ava\":\"Post_ava__2EGbS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBloc\":\"MyPosts_postsBloc__Naxu4\",\"posts\":\"MyPosts_posts__3tZ1c\"};"],"sourceRoot":""}