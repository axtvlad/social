{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","Redux/selectors/dialogsSelectors.ts","components/Dialogs/DialogsContainer.tsx"],"names":["mapStateToProps","state","isAuth","selectIsAuth","withAuthRedirect","WrappedComponent","connect","props","restProps","to","module","exports","AddMessageFormFields","DialogItem","id","name","pathTo","className","classes","dialog","active","activeClassName","Message","message","AddMessageForm","React","memo","sendMessage","initialValuesOfForm","messageText","onSubmit","formData","setSubmitting","initialValues","isSubmitting","component","type","disabled","Dialogs","messages","dialogs","messagesList","map","item","dialogsList","dialogsItems","selectDialogs","dialogsPage","selectMessages","DialogsContainer","this","Component","compose","actions"],"mappings":"6LAMMA,EAAkB,SAACC,GACrB,MAAO,CACHC,OAAQC,YAAaF,KAQtB,SAASG,EAAsBC,GAWlC,OAAOC,YAA6CN,EAA7CM,EAV2C,SAACC,GAChBA,EAAxBL,OADmD,IACxCM,EADuC,YAC1BD,EAD0B,YAGzD,OAAKA,EAAML,OAIJ,cAACG,EAAD,eAAsBG,IAHlB,cAAC,IAAD,CAAUC,GAAI,gB,oBCpBjCC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,0B,oBCA/FD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,OAAS,2BAA2B,OAAS,6B,4CCOhGC,E,4GCCQC,EAA8B,SAAC,GAAgB,IAAfC,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACvCC,EAAM,mBAAeF,GAE3B,OACI,qBAAKG,UAAS,UAAKC,IAAQC,OAAb,YAAuBD,IAAQE,QAA7C,SACI,cAAC,IAAD,CAASX,GAAIO,EAAQK,gBAAiBH,IAAQE,OAA9C,SAAuDL,OCRtDO,EAA2B,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACtC,OACI,8BACKA,K,yBFDRX,K,2BAAAA,M,KAIE,IAAMY,EAAkCC,IAAMC,MAAK,YAAoB,IAAlBC,EAAiB,EAAjBA,YAClDC,EAAmB,eACpBhB,EAAqBiB,YAAc,IAWxC,OACI,cAAC,IAAD,CACIC,SAVS,SAACC,EAAD,GAEV,IAF+CC,EAEhD,EAFgDA,cAGlDL,EAAYI,GAEZC,GAAc,IAMVC,cAAeL,EAFnB,SAIK,gBAAEM,EAAF,EAAEA,aAAF,OACG,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,UAAW,WAAYpB,KAAMH,EAAqBiB,cACzD,cAAC,IAAD,CAAcd,KAAMH,EAAqBiB,YAAaM,UAAU,QAEhE,8BACI,wBAAQC,KAAK,SAASC,SAAUH,EAAhC,6BGtBXI,EAA2B,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,SAAUZ,EAA0B,EAA1BA,YAAaa,EAAa,EAAbA,QACvDC,EAAeF,EAASG,KAAI,SAAAC,GAAI,OAClC,cAAC,EAAD,CAEIpB,QAASoB,EAAKpB,SADToB,EAAK7B,OAKZ8B,EAAcJ,EAAQE,KAAI,SAAAC,GAAI,OAChC,cAAC,EAAD,CAEI5B,KAAM4B,EAAK5B,KACXD,GAAI6B,EAAK7B,IAFJ6B,EAAK7B,OAMlB,OACI,sBAAKG,UAAWC,IAAQsB,QAAxB,UACI,qBAAKvB,UAAWC,IAAQ2B,aAAxB,SACKD,IAEL,sBAAK3B,UAAWC,IAAQqB,SAAxB,UACKE,EACD,cAACjB,EAAD,CAAgBG,YAAaA,W,gBCnChCmB,EAAgB,SAAC7C,GAC1B,OAAOA,EAAM8C,YAAYP,SAGhBQ,EAAiB,SAAC/C,GAC3B,OAAOA,EAAM8C,YAAYR,U,SCcvBU,E,uKACQ,IAAD,EACoCC,KAAK3C,MAAvCgC,EADF,EACEA,SAAUC,EADZ,EACYA,QAASb,EADrB,EACqBA,YAE1B,OACI,cAAC,EAAD,CAASY,SAAUA,EAAUC,QAASA,EAASb,YAAaA,Q,GALzCF,IAAM0B,WAiBtBC,sBACX9C,aARoB,SAACL,GACrB,MAAO,CACHuC,QAASM,EAAc7C,GACvBsC,SAAUS,EAAe/C,MAK6C,CACtE0B,YAAa0B,IAAQ1B,cAEzBvB,IAJWgD,CAKbH","file":"static/js/4.9d2bb005.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectIsAuth} from \"../Redux/selectors/authSelectors\";\r\nimport {AppStateType} from \"../Redux/redux-store\";\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isAuth: selectIsAuth(state),\r\n    }\r\n}\r\n\r\ntype StateToProps = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport function withAuthRedirect<WCP>(WrappedComponent: React.ComponentType<WCP>) {\r\n    const RedirectComponent: React.FC<StateToProps> = (props) => {\r\n        const {isAuth, ...restProps} = props\r\n\r\n        if (!props.isAuth) {\r\n            return <Redirect to={'/login'}/>\r\n        }\r\n\r\n        return <WrappedComponent {...restProps as WCP} />\r\n    }\r\n\r\n    return connect<StateToProps, {}, WCP, AppStateType>(mapStateToProps)(RedirectComponent)\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__-2Tiq\",\"dialog\":\"Dialogs_dialog__1NKvi\",\"active\":\"Dialogs_active__aFoJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__sIfQj\",\"dialog\":\"DialogItem_dialog__37ti9\",\"active\":\"DialogItem_active__28sA1\"};","import React from \"react\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport {SendMessageFormDataType} from \"../../../types/types\";\r\n\r\ntype Props = {\r\n    sendMessage: (messageText: SendMessageFormDataType) => void\r\n}\r\n\r\nenum AddMessageFormFields {\r\n    messageText = 'messageText'\r\n}\r\n\r\nexport const AddMessageForm: React.FC<Props> = React.memo(({sendMessage}) => {\r\n    const initialValuesOfForm = {\r\n        [AddMessageFormFields.messageText]: ''\r\n    }\r\n\r\n    const onSubmit = (formData: SendMessageFormDataType, {setSubmitting}: {\r\n        setSubmitting: (isSubmitting: boolean) => void\r\n    }) => {\r\n        sendMessage(formData)\r\n\r\n        setSubmitting(false)\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            onSubmit={onSubmit}\r\n            initialValues={initialValuesOfForm}\r\n        >\r\n            {({isSubmitting}) => (\r\n                <Form>\r\n                    <Field component={'textarea'} name={AddMessageFormFields.messageText}/>\r\n                    <ErrorMessage name={AddMessageFormFields.messageText} component=\"div\"/>\r\n\r\n                    <div>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Send\r\n                        </button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})\r\n","import React from 'react';\r\nimport classes from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype Props = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport const DialogItem: React.FC<Props> = ({id, name}) => {\r\n    const pathTo = `/dialogs/${id}`;\r\n\r\n    return (\r\n        <div className={`${classes.dialog} ${classes.active}`}>\r\n            <NavLink to={pathTo} activeClassName={classes.active}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\ntype Props = {\r\n    message: string\r\n}\r\n\r\nexport const Message: React.FC<Props> = ({message}) => {\r\n    return (\r\n        <div>\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport classes from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogType, MessageType, SendMessageFormDataType} from \"../../types/types\";\r\nimport {AddMessageForm} from \"./AddMessageForm/AddMessageForm\";\r\n\r\ntype Props = {\r\n    messages: Array<MessageType>\r\n    dialogs: Array<DialogType>\r\n\r\n    sendMessage: (messageText: SendMessageFormDataType) => void\r\n}\r\n\r\nexport const Dialogs: React.FC<Props> = ({messages, sendMessage, dialogs}) => {\r\n    const messagesList = messages.map(item =>\r\n        <Message\r\n            key={item.id}\r\n            message={item.message}\r\n        />\r\n    );\r\n\r\n    const dialogsList = dialogs.map(item =>\r\n        <DialogItem\r\n            key={item.id}\r\n            name={item.name}\r\n            id={item.id}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsList}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                {messagesList}\r\n                <AddMessageForm sendMessage={sendMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {AppStateType} from \"../redux-store\";\r\n\r\nexport const selectDialogs = (state: AppStateType) => {\r\n    return state.dialogsPage.dialogs;\r\n}\r\n\r\nexport const selectMessages = (state: AppStateType) => {\r\n    return state.dialogsPage.messages;\r\n}","import {actions} from \"../../Redux/reducers/dialogsReducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {selectDialogs, selectMessages} from \"../../Redux/selectors/dialogsSelectors\";\r\nimport {AppStateType} from \"../../Redux/redux-store\";\r\nimport {DialogType, MessageType, SendMessageFormDataType} from \"../../types/types\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\ntype StateToProps = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n}\r\n\r\ntype DispatchToProps = {\r\n    sendMessage: (messageText: SendMessageFormDataType) => void\r\n}\r\n\r\ntype Props = StateToProps & DispatchToProps\r\n\r\nclass DialogsContainer extends React.Component<Props> {\r\n    render() {\r\n        const {messages, dialogs, sendMessage} = this.props;\r\n\r\n        return (\r\n            <Dialogs messages={messages} dialogs={dialogs} sendMessage={sendMessage}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): StateToProps => {\r\n    return {\r\n        dialogs: selectDialogs(state),\r\n        messages: selectMessages(state)\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<StateToProps, DispatchToProps, {}, AppStateType>(mapStateToProps, {\r\n        sendMessage: actions.sendMessage,\r\n    }),\r\n    withAuthRedirect,\r\n)(DialogsContainer)"],"sourceRoot":""}